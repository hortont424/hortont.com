I spent a bit of time trying to get the Intervalometer working, after Dad and I carved up the case while I was home. The board is really a mess; unsoldering the posts I put on from before turned into a real mess, so that's not going too well. We'll see &mdash; in any case, I put that off for a day when I'm not soldering at 1AM.

Instead, I got angry at the amount of crap required to get a standalone ATmega working (and programmable) on a breadboard. Even though it's only a handful of components (3) and wires (a bunch), the most annoying part is getting the ICSP cable attached. Right now, I've been just poking wires into the cable, which is annoying because there's no way to unplug it without looking up what goes where, again and again... very annoying.

So I sat down and started putting together a little gadget, based on one of the tiny little bits of protoboard I got from SparkFun. It's got a ICSP header, 16 MHz resonator, reset switch, and power LED, as well as the reset pullup resistor. There are 9 pins on the bottom (one more than optimal, really), in two rows (3 and 6) spaced at normal IC-spacing (0.2"?), so it drops right into a breadboard. Now, it's just 9 (optimally eight) wires to the ATmega, and you've got everything working great (except analog input, but that's just one or two more wires), and can easily remove the programmer without issue, and everything remaining is contained on the breadboard.

<img src="http://files.hortont.com/minimega.jpg" width="100%"/>

It's not as elegant as the little board that slips over the ATmega that I saw on that Arduino blog a few months ago, because the protoboard I had wasn't wide enough to span all of the necessary pins. Perhaps revision 2!

I'm not posting a schematic because it's <em>obvious</em> (and because it's 3AM), but if I revise it to be more interesting, I might...