<img src="http://hortont.com/files/lisparticles/particles.png" style="margin-left:-31px" width="652px" />

Here's a post I promised a <em>long </em>time ago. I was playing around with <a href="http://www.sbcl.org/">Lisp</a> back in late June, and wrote a little brute-force n-body problem solver. I should note that when I say brute force, I mean <strong>most naïve solution possible</strong> -- summing all of the forces, etc.

It seems this is one of the first things I write in a new language now... not sure why, it's not exactly a very good test of <em>any</em> language; at least not this type of implementation.

After the Lisp bit, I wrote a little point viewer in Perl (with <a href="http://search.cpan.org/~bfree/OpenGL-0.56/">Perl::OpenGL</a>). It's not as pretty or fast as the one <a href="http://code.google.com/creative/radiohead/">Radiohead used</a> that was implemented in <a href="http://processing.org/">Processing</a>, but this was before that was announced, and I've never (<a href="http://www.arduino.cc/">yet</a>) written anything in Wiring/Processing, so I wouldn't have thought to use it.

So; it's all really very slow, and silly. Very. Very. Slow. But, it works. Also, it's physically inaccurate, in order to get results in any reasonable number of frames. Like, <strong>G</strong> is seven orders of magnitude larger than normal. So much for gravity being the weakest fundamental force... (<strong>EDIT</strong>: actually no. it's still <a href="http://en.wikipedia.org/wiki/Fundamental_force#Overview">not even close</a>.)

So, for your particle-simulating-pleasure: <a href="http://hortont.com/files/lisparticles/particles.lisp">the Lisp</a> and <a href="http://hortont.com/files/lisparticles/glviewer.perl">the Perl</a>.